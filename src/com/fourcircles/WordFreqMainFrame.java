/*
 * WordFreqMainFrame.java
 *
 * Created on September 8, 2006, 10:33 PM
 */

package com.fourcircles;

import java.awt.AlphaComposite;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.SplashScreen;
import java.awt.event.ActionEvent;
import java.net.URL;
import java.awt.event.ActionListener;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.TreeMap;
import java.util.Vector;


import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.event.MenuKeyEvent;
import javax.swing.event.MenuKeyListener;
import javax.swing.event.TableModelEvent;
import javax.swing.table.TableModel;
import javax.swing.text.DefaultEditorKit;

import org.apache.log4j.Logger;

import com.fourcircles.wordfrequency.CountWords;

/**
 * This code was edited or generated using CloudGarden's Jigloo SWT/Swing GUI
 * Builder, which is free for non-commercial use. If Jigloo is being used
 * commercially (ie, by a corporation, company or business for any purpose
 * whatever) then you should purchase a license for each developer using Jigloo.
 * Please visit www.cloudgarden.com for details. Use of Jigloo implies
 * acceptance of these licensing terms. A COMMERCIAL LICENSE HAS NOT BEEN
 * PURCHASED FOR THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED LEGALLY FOR
 * ANY CORPORATE OR COMMERCIAL PURPOSE.
 */
/**
 * 
 * @author Rajeev Kuruganti
 * @company 4 Circles LLC
 * @created on July 2006
* cleaned up code and updated the code to work 2010
* cleanedup code, added a log file. 
 */
public class WordFreqMainFrame extends javax.swing.JFrame {
  private static final int maximumRows = 50;
  private static Logger logger = Logger.getLogger(WordFreqMainFrame.class);
  
  // Read the resource Bundle which is wordFrequency.properties
  // if hte language is different then wordFrequency_fr.properties
  private Locale myLocale =  new Locale("es","mex");
  private ResourceBundle rb = ResourceBundle.getBundle("wordFrequency",myLocale );
  // get the Screen's text and labels from properties files. 
  private String firstColumnName = rb.getString("FirstColumnName");
  private String secondColumnName = rb.getString("SecondColumnName");
  private String appTitle = rb.getString("Title");
  private String countWordsButton = rb.getString("CountButton");
  private String ignoreCase= rb.getString("IgnoreCase");
  private String totalWords= rb.getString("TotalWords");
  private String uniqueWords= rb.getString("UniqueWords");

  /** Creates new form NewJFrame1 */
	public WordFreqMainFrame() {
		
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
	// ">//GEN-BEGIN:initComponents
	private void initComponents() {
		
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable(maximumRows,2);
		jTable1.setModel(new javax.swing.table.DefaultTableModel(new Object[maximumRows][2],
				new String[] { firstColumnName , secondColumnName }));
		
//		jTable1.setAutoCreateRowSorter(true);
		setTitle(appTitle);

		jButton1 = new javax.swing.JButton();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jLabel1 = new javax.swing.JLabel();
		GroupLayout layout = new GroupLayout((JComponent) getContentPane());
		getContentPane().setLayout(layout);
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jPanel1 = new javax.swing.JPanel();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle(appTitle);
		this.setResizable(false);
		{
			topMenuBar = new JMenuBar();
			setJMenuBar(topMenuBar);
			topMenuBar.add(getFileMenu());
			topMenuBar.add(getEdit());
			topMenuBar.add(getJMenu1());
		}
		jScrollPane1.setAutoscrolls(true);
		{// set the Icon for WordsJumble pic
			 jLabel7 = new JLabel();			
			jLabel7.setIcon(new ImageIcon(getClass().getClassLoader().getResource("images/wordsjumble.jpg")));

		}
		jTable1.setBorder(javax.swing.BorderFactory
				.createLineBorder(new java.awt.Color(0, 0, 0)));
		
		jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
		jTable1.setName("");
		jScrollPane1.setViewportView(jTable1);
		jTable1.getAccessibleContext().setAccessibleName("");

		jButton1.setText(countWordsButton);
		jButton1.setToolTipText("Initial Data");
		jButton1.setName("jbuttonInitialData");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		
		jTextArea1.setColumns(20);
		jTextArea1.setLineWrap(true);
		jTextArea1.setRows(240);
		jTextArea1.setName("docText");
		jScrollPane2.setViewportView(jTextArea1);
		jTextArea1.setPreferredSize(new java.awt.Dimension(374, 3844));

		jLabel1.setText(totalWords+": ");

		jLabel2.setText("0");

		jLabel3.setText(uniqueWords+ ": ");

		jLabel4.setText("0");

		jLabel5.setFont(new java.awt.Font("SansSerif", 1, 10));
		jLabel5.setForeground(new java.awt.Color(51, 51, 255));
		jLabel5.setText(appTitle+" v1.2");

		jLabel6.setFont(new java.awt.Font("MS Sans Serif", 3, 12));
		jLabel6.setForeground(new java.awt.Color(0, 153, 0));
		jLabel6.setText("copyright: 4 Circles LLC.");
		jLabel6.setHorizontalAlignment(SwingConstants.CENTER);

		org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		{
			chkBoxCase = new JCheckBox();
			chkBoxCase.setText(ignoreCase);
		}
		{
			jPanel2 = new JPanel();
			GroupLayout jPanel2Layout = new GroupLayout((JComponent) jPanel2);
			jPanel2.setLayout(jPanel2Layout);
			jPanel2.setPreferredSize(new java.awt.Dimension(10, 10));
			jPanel2Layout.setVerticalGroup(jPanel2Layout
					.createSequentialGroup());
			jPanel2Layout.setHorizontalGroup(jPanel2Layout
					.createSequentialGroup());
		}
		layout
				.setVerticalGroup(layout
						.createSequentialGroup()
						.addGroup(
								layout
										.createParallelGroup()
										.addGroup(
												GroupLayout.Alignment.LEADING,
												layout
														.createSequentialGroup()
														.addComponent(
																jScrollPane1,
																GroupLayout.PREFERRED_SIZE,
																544,
																GroupLayout.PREFERRED_SIZE)
														.addGap(8))
										.addGroup(
												layout
														.createSequentialGroup()
														.addGap(8)
														.addGroup(
																layout
																		.createParallelGroup()
																		.addComponent(
																				jScrollPane2,
																				GroupLayout.Alignment.LEADING,
																				GroupLayout.PREFERRED_SIZE,
																				544,
																				GroupLayout.PREFERRED_SIZE)
																		.addGroup(
																				GroupLayout.Alignment.LEADING,
																				layout
																						.createSequentialGroup()
																						.addGap(
																								9)
																						.addComponent(
																								chkBoxCase,
																								GroupLayout.PREFERRED_SIZE,
																								GroupLayout.PREFERRED_SIZE,
																								GroupLayout.PREFERRED_SIZE)
																						.addGap(
																								73)
																						.addComponent(
																								jButton1,
																								GroupLayout.PREFERRED_SIZE,
																								GroupLayout.PREFERRED_SIZE,
																								GroupLayout.PREFERRED_SIZE)
																						.addGap(
																								47)
																						.addGroup(
																								layout
																										.createParallelGroup(
																												GroupLayout.Alignment.BASELINE)
																										.addComponent(
																												jLabel2,
																												GroupLayout.Alignment.BASELINE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE)
																										.addComponent(
																												jLabel1,
																												GroupLayout.Alignment.BASELINE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE))
																						.addGap(
																								19)
																						.addGroup(
																								layout
																										.createParallelGroup(
																												GroupLayout.Alignment.BASELINE)
																										.addComponent(
																												jLabel4,
																												GroupLayout.Alignment.BASELINE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE)
																										.addComponent(
																												jLabel3,
																												GroupLayout.Alignment.BASELINE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE,
																												GroupLayout.PREFERRED_SIZE))
																						.addGap(
																								28)
																						.addComponent(
																								jPanel2,
																								GroupLayout.PREFERRED_SIZE,
																								19,
																								GroupLayout.PREFERRED_SIZE)
																						.addGap(
																								53)
																						.addComponent(
																								jLabel7,
																								GroupLayout.PREFERRED_SIZE,
																								197,
																								GroupLayout.PREFERRED_SIZE)
																						.addGap(
																								28)))))
						.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 15,
								GroupLayout.PREFERRED_SIZE).addGap(6));
		layout
				.setHorizontalGroup(layout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								layout
										.createParallelGroup()
										.addGroup(
												GroupLayout.Alignment.LEADING,
												layout
														.createSequentialGroup()
														.addComponent(
																jScrollPane2,
																GroupLayout.PREFERRED_SIZE,
																392,
																GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																LayoutStyle.ComponentPlacement.UNRELATED)
														.addGroup(
																layout
																		.createParallelGroup()
																		.addGroup(
																				layout
																						.createSequentialGroup()
																						.addGroup(
																								layout
																										.createParallelGroup()
																										.addComponent(
																												chkBoxCase,
																												GroupLayout.Alignment.LEADING,
																												GroupLayout.PREFERRED_SIZE,
																												252,
																												GroupLayout.PREFERRED_SIZE)
																										.addGroup(
																												GroupLayout.Alignment.LEADING,
																												layout
																														.createSequentialGroup()
																														.addComponent(
																																jLabel3,
																																GroupLayout.PREFERRED_SIZE,
																																GroupLayout.PREFERRED_SIZE,
																																GroupLayout.PREFERRED_SIZE)
																														.addGap(
																																166))
																										.addGroup(
																												GroupLayout.Alignment.LEADING,
																												layout
																														.createSequentialGroup()
																														.addComponent(
																																jLabel1,
																																GroupLayout.PREFERRED_SIZE,
																																GroupLayout.PREFERRED_SIZE,
																																GroupLayout.PREFERRED_SIZE)
																														.addGap(
																																178))
																										.addGroup(
																												GroupLayout.Alignment.LEADING,
																												layout
																														.createSequentialGroup()
																														.addComponent(
																																jButton1,
																																GroupLayout.PREFERRED_SIZE,
																																229,
																																GroupLayout.PREFERRED_SIZE)
																														.addGap(
																																23))
																										.addComponent(
																												jPanel2,
																												GroupLayout.Alignment.LEADING,
																												GroupLayout.PREFERRED_SIZE,
																												252,
																												GroupLayout.PREFERRED_SIZE))
																						.addGroup(
																								layout
																										.createParallelGroup()
																										.addComponent(
																												jLabel4,
																												GroupLayout.Alignment.LEADING,
																												GroupLayout.PREFERRED_SIZE,
																												24,
																												GroupLayout.PREFERRED_SIZE)
																										.addComponent(
																												jLabel2,
																												GroupLayout.Alignment.LEADING,
																												GroupLayout.PREFERRED_SIZE,
																												22,
																												GroupLayout.PREFERRED_SIZE))
																						.addGap(
																								6))
																		.addComponent(
																				jLabel7,
																				GroupLayout.Alignment.LEADING,
																				0,
																				282,
																				Short.MAX_VALUE))
														.addPreferredGap(
																LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(
																jScrollPane1,
																GroupLayout.PREFERRED_SIZE,
																307,
																GroupLayout.PREFERRED_SIZE))
										.addGroup(
												GroupLayout.Alignment.LEADING,
												layout
														.createSequentialGroup()
														.addComponent(
																jPanel1,
																GroupLayout.PREFERRED_SIZE,
																991,
																GroupLayout.PREFERRED_SIZE)
														.addGap(20))));
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								jPanel1Layout
										.createSequentialGroup()
										.add(
												jLabel5,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												205,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED,
												595, Short.MAX_VALUE)
										.add(
												jLabel6,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												176,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								jPanel1Layout
										.createSequentialGroup()
										.add(
												jPanel1Layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(
																jLabel5,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																16,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																jLabel6,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																19,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		pack();
		this.setSize(1029, 652);
	}// </editor-fold>//GEN-END:initComponents

	private ImageIcon createImageIcon(String path, String description) {
		/** Returns an ImageIcon, or null if the path was invalid. */

		java.net.URL imgURL = getClass().getResource(path);

		if (imgURL != null) {
			return new ImageIcon(imgURL, description);
		} else {
			System.err.println("Couldn't find file: " + path);
			return null;
		}
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed

		StringBuffer docArea = new StringBuffer();
		docArea.append(jTextArea1.getText());
		CountWords cw = new CountWords();
				

		jTable1.setModel(new javax.swing.table.DefaultTableModel(new Object[maximumRows][2],
				new String[] { firstColumnName, secondColumnName }));
		TreeMap<String, Integer> wordFreq = new TreeMap<String, Integer>();
		clearTable(jTable1);
		if (chkBoxCase.isSelected()) {
			wordFreq = cw.howManyWordsSorted(docArea, true);
		} else {
			wordFreq = cw.howManyWordsSorted(docArea, false);
		}
		// Enumeration keys = wordFreq.keys();
		Iterator iter = wordFreq.keySet().iterator();
		String key = new String();
		Vector keyWords = new Vector();
		int totalWords = 0;
		logger.debug("wordFreq.SIZE = " + wordFreq.size());
		String[][] newTableData = new String[wordFreq.size()][2];
		int i = 0;
		while (iter.hasNext()) {
			key = (String) iter.next();
			Integer value = (Integer) wordFreq.get(key);
			// System.out.println("key&Value= "+key+"&"+value.toString());
			newTableData[i][0] = key;
			newTableData[i][1] = value.toString();
			totalWords = value.intValue() + totalWords;
			i++;
		}
		Integer allWordsCount = new Integer(totalWords);
		Object clearData[][] = new Object[totalWords][2];
		for (int ii = 0; ii < totalWords; ii++) {
			clearData[ii][0] = null;
			clearData[ii][1] = null;
		}
		int row = 0;
		int col = 0;
		int totalColumns = jTable1.getColumnCount();
		int totalRows = newTableData.length;
		jLabel2.setText(allWordsCount.toString());
		jLabel4.setText(Integer.toString(totalRows));
	//	clearTable(jTable1);
		
		while (row < maximumRows) {
			while (col < totalColumns) {
				jTable1.setValueAt(newTableData[row][col], row, col);
				col++;
			}
			row++;
			col = 0;
		}

	}// event_jButton1ActionPerformed

	public void tableChanged(TableModelEvent e) {
		int row = e.getFirstRow();
		int column = e.getColumn();
		TableModel model = (TableModel) e.getSource();
		String columnName = model.getColumnName(column);
		logger.debug("ColumnName = " + columnName);
		Object data = model.getValueAt(row, column);

		// Do something with the data...
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		final SplashScreen splash = SplashScreen.getSplashScreen();
		if (splash == null) {
			logger.debug("SplashScreen.getSplashScreen() returned null");
			// return;
		} else {
			Graphics2D g = splash.createGraphics();

			if (g == null) {
				logger.debug("g is null");
				return;
			}
		}

		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new WordFreqMainFrame().setVisible(true);

			}
		});
	}

	private void clearTable(JTable table) {
		int numRows = table.getRowCount();
		int numCols = table.getColumnCount();
		javax.swing.table.TableModel model = table.getModel();

		for (int i = 0; i < numRows; i++) {
			for (int j = 0; j < numCols; j++) {
				model.setValueAt(null, i, j);
			}
		}
	}

	private static void renderSplashFrame(Graphics2D g, int frame) {
		// TODO Auto-generated method stub
		final String[] comps = { "foo", "bar", "baz" };
		g.setComposite(AlphaComposite.Clear);
		g.fillRect(120, 140, 200, 40);
		g.setPaintMode();
		g.setColor(Color.BLACK);
		g.drawString("Loading " + comps[(frame / 5) % 3] + "...", 120, 150);

	}

	public JDialog getAboutDlg() {
		if (AboutDlg == null) {
			AboutDlg = new JDialog(this);
			AboutDlg.setTitle(appTitle+ " About");
			AboutDlg.setModal(true);
			{
				AboutPanel = new JPanel();
				GroupLayout AboutPanelLayout = new GroupLayout(
						(JComponent) AboutPanel);
				AboutPanel.setLayout(AboutPanelLayout);
				AboutDlg.getContentPane().add(AboutPanel, BorderLayout.CENTER);
				{
					AboutOKbtn = new JButton();
					AboutOKbtn.setText("OK");
					AboutOKbtn.setAction(getOkAction());
				}
				{
					AboutLbl1 = new JLabel();
					AboutLbl1
							.setText("<html>Word Frequency v1.2 is copyrighted by 4 Circles. This <br> free software can be downloaded and distributed.</html>");
					AboutLbl1.setHorizontalAlignment(SwingConstants.CENTER);
				}
				AboutPanelLayout
						.setVerticalGroup(AboutPanelLayout
								.createSequentialGroup()
								.addComponent(AboutLbl1,
										GroupLayout.PREFERRED_SIZE, 42,
										GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(getAboutLbl2(),
										GroupLayout.PREFERRED_SIZE,
										GroupLayout.PREFERRED_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										AboutPanelLayout
												.createParallelGroup()
												.addGroup(
														GroupLayout.Alignment.LEADING,
														AboutPanelLayout
																.createSequentialGroup()
																.addComponent(
																		getAboutLabel5(),
																		GroupLayout.PREFERRED_SIZE,
																		GroupLayout.PREFERRED_SIZE,
																		GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		getContactSnailMail(),
																		GroupLayout.PREFERRED_SIZE,
																		67,
																		GroupLayout.PREFERRED_SIZE)
																.addComponent(
																		getAboutThx(),
																		GroupLayout.PREFERRED_SIZE,
																		20,
																		GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		AboutOKbtn,
																		GroupLayout.PREFERRED_SIZE,
																		GroupLayout.PREFERRED_SIZE,
																		GroupLayout.PREFERRED_SIZE))
												.addGroup(
														GroupLayout.Alignment.LEADING,
														AboutPanelLayout
																.createSequentialGroup()
																.addComponent(
																		getAboutLabel4(),
																		0,
																		124,
																		Short.MAX_VALUE)
																.addGap(12))));
				AboutPanelLayout
						.setHorizontalGroup(AboutPanelLayout
								.createSequentialGroup()
								.addGroup(
										AboutPanelLayout
												.createParallelGroup()
												.addGroup(
														GroupLayout.Alignment.LEADING,
														AboutPanelLayout
																.createSequentialGroup()
																.addComponent(
																		AboutLbl1,
																		GroupLayout.PREFERRED_SIZE,
																		340,
																		GroupLayout.PREFERRED_SIZE)
																.addGap(24))
												.addGroup(
														GroupLayout.Alignment.LEADING,
														AboutPanelLayout
																.createSequentialGroup()
																.addComponent(
																		getAboutLabel4(),
																		GroupLayout.PREFERRED_SIZE,
																		114,
																		GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		AboutPanelLayout
																				.createParallelGroup()
																				.addGroup(
																						GroupLayout.Alignment.LEADING,
																						AboutPanelLayout
																								.createSequentialGroup()
																								.addComponent(
																										getAboutThx(),
																										GroupLayout.PREFERRED_SIZE,
																										226,
																										GroupLayout.PREFERRED_SIZE)
																								.addGap(
																										6))
																				.addGroup(
																						GroupLayout.Alignment.LEADING,
																						AboutPanelLayout
																								.createSequentialGroup()
																								.addComponent(
																										getContactSnailMail(),
																										GroupLayout.PREFERRED_SIZE,
																										226,
																										GroupLayout.PREFERRED_SIZE)
																								.addGap(
																										6))
																				.addGroup(
																						GroupLayout.Alignment.LEADING,
																						AboutPanelLayout
																								.createSequentialGroup()
																								.addPreferredGap(
																										LayoutStyle.ComponentPlacement.RELATED,
																										132,
																										132)
																								.addComponent(
																										AboutOKbtn,
																										GroupLayout.PREFERRED_SIZE,
																										65,
																										GroupLayout.PREFERRED_SIZE)
																								.addGap(
																										35))
																				.addComponent(
																						getAboutLabel5(),
																						GroupLayout.Alignment.LEADING,
																						GroupLayout.PREFERRED_SIZE,
																						232,
																						GroupLayout.PREFERRED_SIZE))
																.addGap(12))
												.addComponent(
														getAboutLbl2(),
														GroupLayout.Alignment.LEADING,
														GroupLayout.PREFERRED_SIZE,
														364,
														GroupLayout.PREFERRED_SIZE))
								.addGap(6));
			}
			AboutDlg.setSize(378, 238);
		}
		return AboutDlg;
	}

	private JLabel getAboutLbl2() {
		if (AboutLbl2 == null) {
			AboutLbl2 = new JLabel();
			AboutLbl2
					.setText("<html>If you like this software please donate on our website </html>");
			AboutLbl2.setHorizontalAlignment(SwingConstants.CENTER);
			AboutLbl2.setFont(new java.awt.Font("Arial", 1, 13));
		}
		return AboutLbl2;
	}

	public JLabel getAboutLabel4() {
		if (AboutLabel4 == null) {
			AboutLabel4 = new JLabel();
			AboutLabel4.setText("jLabel8");
			AboutLabel4.setIcon(new ImageIcon(getClass().getClassLoader()
					.getResource("images/4circlesSmall.JPG")));
			AboutLabel4.setVerticalAlignment(SwingConstants.BOTTOM);
		}
		return AboutLabel4;
	}

	private JLabel getAboutLabel5() {
		if (AboutLabel5 == null) {
			AboutLabel5 = new JLabel();
			AboutLabel5.setText("Email: wordcount@4CirclesLLC.com");
			AboutLabel5.setHorizontalAlignment(SwingConstants.CENTER);
			AboutLabel5.setFont(new java.awt.Font("Arial", 2, 13));
			AboutLabel5.setLayout(null);

		}
		return AboutLabel5;
	}

	private JLabel getAboutThx() {
		if (AboutThx == null) {
			AboutThx = new JLabel();
			AboutThx
					.setText("<html>Acknowledgements: Raj Sehgal and Gary Fidler</html>");
			AboutThx.setHorizontalAlignment(SwingConstants.CENTER);
			AboutThx.setFont(new java.awt.Font("Arial", 0, 9));
		}
		return AboutThx;
	}

	private JMenu getJMenu1() {
		if (jMenu1 == null) {
			jMenu1 = new JMenu();
			jMenu1.setText("Help");
			jMenu1.add(getJMenuItem2());
			jMenu1.add(getJMenuItem1());

		}
		return jMenu1;
	}

	private AbstractAction getFaqAction() {
		if (faqAction == null) {
			faqAction = new AbstractAction("FAQ", null) {
				public void actionPerformed(ActionEvent evt) {
					getFAQDlg().pack();
					getFAQDlg().setLocationRelativeTo(null);
					getFAQDlg().setVisible(true);
				}
			};
			faqAction.putValue(javax.swing.Action.ACCELERATOR_KEY, KeyStroke
					.getKeyStroke("shift ctrl pressed Q"));
		}
		return faqAction;
	}

	private AbstractAction getAboutAction1() {
		if (aboutAction1 == null) {
			aboutAction1 = new AbstractAction("About", null) {
				public void actionPerformed(ActionEvent evt) {

					getAboutDlg().pack();
					getAboutDlg().setLocationRelativeTo(null);
					getAboutDlg().setVisible(true);

				}
			};
			aboutAction1.putValue(javax.swing.Action.ACCELERATOR_KEY, KeyStroke
					.getKeyStroke("shift ctrl pressed A"));
		}
		return aboutAction1;
	}

	private JMenuItem getJMenuItem1() {
		if (jMenuItem1 == null) {
			jMenuItem1 = new JMenuItem();
			jMenuItem1.setAction(getAboutAction1());
		}
		return jMenuItem1;
	}

	private JMenuItem getJMenuItem2() {
		if (jMenuItem2 == null) {
			jMenuItem2 = new JMenuItem();
			jMenuItem2.setAction(getFaqAction());
		}
		return jMenuItem2;
	}

	private AbstractAction getOkAction() {
		if (okAction == null) {
			okAction = new AbstractAction("OK", null) {
				public void actionPerformed(ActionEvent evt) {
					getAboutDlg().dispose();
				}
			};
		}
		return okAction;
	}

	public JDialog getFAQDlg() {
		if (FAQDlg == null) {
			FAQDlg = new JDialog(this);
			FAQDlg.setTitle("Word Frequency - Frequently Answered Questions");
			FAQDlg.setModal(true);
			FAQDlg.getContentPane().add(getJScrollPane3(), BorderLayout.CENTER);
			FAQDlg.setSize(473, 463);
		}
		return FAQDlg;
	}

	private JPanel getFAQPanel() {
		if (FAQPanel == null) {
			FAQPanel = new JPanel();
			GroupLayout FAQPanelLayout = new GroupLayout((JComponent) FAQPanel);
			FAQPanel.setLayout(FAQPanelLayout);
			FAQPanel.setPreferredSize(new java.awt.Dimension(462, 424));
			FAQPanelLayout
					.setHorizontalGroup(FAQPanelLayout
							.createSequentialGroup()
							.addContainerGap()
							.addGroup(
									FAQPanelLayout
											.createParallelGroup()
											.addGroup(
													GroupLayout.Alignment.LEADING,
													FAQPanelLayout
															.createSequentialGroup()
															.addComponent(
																	getJLabel8(),
																	GroupLayout.PREFERRED_SIZE,
																	367,
																	GroupLayout.PREFERRED_SIZE)
															.addGap(55))
											.addGroup(
													GroupLayout.Alignment.LEADING,
													FAQPanelLayout
															.createSequentialGroup()
															.addComponent(
																	getFaqq2(),
																	GroupLayout.PREFERRED_SIZE,
																	362,
																	GroupLayout.PREFERRED_SIZE)
															.addGap(60))
											.addGroup(
													GroupLayout.Alignment.LEADING,
													FAQPanelLayout
															.createSequentialGroup()
															.addGroup(
																	FAQPanelLayout
																			.createParallelGroup()
																			.addComponent(
																					getJLabel9(),
																					GroupLayout.Alignment.LEADING,
																					GroupLayout.PREFERRED_SIZE,
																					320,
																					GroupLayout.PREFERRED_SIZE)
																			.addGroup(
																					GroupLayout.Alignment.LEADING,
																					FAQPanelLayout
																							.createSequentialGroup()
																							.addComponent(
																									getFaq1(),
																									GroupLayout.PREFERRED_SIZE,
																									231,
																									GroupLayout.PREFERRED_SIZE)
																							.addGap(
																									89))
																			.addComponent(
																					getJLabel10(),
																					GroupLayout.Alignment.LEADING,
																					GroupLayout.PREFERRED_SIZE,
																					320,
																					GroupLayout.PREFERRED_SIZE))
															.addGap(
																	0,
																	40,
																	Short.MAX_VALUE)
															.addComponent(
																	getOKbtn(),
																	GroupLayout.PREFERRED_SIZE,
																	62,
																	GroupLayout.PREFERRED_SIZE))
											.addGroup(
													FAQPanelLayout
															.createSequentialGroup()
															.addGap(7)
															.addGroup(
																	FAQPanelLayout
																			.createParallelGroup()
																			.addGroup(
																					GroupLayout.Alignment.LEADING,
																					FAQPanelLayout
																							.createSequentialGroup()
																							.addComponent(
																									getJLabel11(),
																									GroupLayout.PREFERRED_SIZE,
																									402,
																									GroupLayout.PREFERRED_SIZE)
																							.addGap(
																									13))
																			.addGroup(
																					GroupLayout.Alignment.LEADING,
																					FAQPanelLayout
																							.createSequentialGroup()
																							.addComponent(
																									getFaqa3(),
																									GroupLayout.PREFERRED_SIZE,
																									313,
																									GroupLayout.PREFERRED_SIZE)
																							.addGap(
																									102))
																			.addComponent(
																					getFaqa1(),
																					GroupLayout.Alignment.LEADING,
																					0,
																					415,
																					Short.MAX_VALUE)
																			.addGroup(
																					FAQPanelLayout
																							.createSequentialGroup()
																							.addGap(
																									8)
																							.addGroup(
																									FAQPanelLayout
																											.createParallelGroup()
																											.addGroup(
																													GroupLayout.Alignment.LEADING,
																													FAQPanelLayout
																															.createSequentialGroup()
																															.addComponent(
																																	getJlabelPic(),
																																	GroupLayout.PREFERRED_SIZE,
																																	109,
																																	GroupLayout.PREFERRED_SIZE)
																															.addGap(
																																	32)
																															.addComponent(
																																	getEmaillbl(),
																																	GroupLayout.PREFERRED_SIZE,
																																	227,
																																	GroupLayout.PREFERRED_SIZE)
																															.addGap(
																																	39))
																											.addGroup(
																													FAQPanelLayout
																															.createSequentialGroup()
																															.addGap(
																																	0,
																																	0,
																																	Short.MAX_VALUE)
																															.addComponent(
																																	getFAQLabel(),
																																	GroupLayout.PREFERRED_SIZE,
																																	407,
																																	GroupLayout.PREFERRED_SIZE)))))))
							.addContainerGap(28, 28));
			FAQPanelLayout
					.setVerticalGroup(FAQPanelLayout
							.createSequentialGroup()
							.addContainerGap()
							.addComponent(getFAQLabel(),
									GroupLayout.PREFERRED_SIZE, 31,
									GroupLayout.PREFERRED_SIZE)
							.addGap(23)
							.addComponent(getFaq1(),
									GroupLayout.PREFERRED_SIZE, 22,
									GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(
									LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(getFaqa1(),
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(
									LayoutStyle.ComponentPlacement.UNRELATED)
							.addComponent(getFaqq2(),
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(
									LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(getJLabel8(),
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(
									LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(getJLabel9(),
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(
									LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(getFaqa3(),
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(
									LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(getJLabel10(),
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE,
									GroupLayout.PREFERRED_SIZE)
							.addComponent(getJLabel11(), 0, 50, Short.MAX_VALUE)
							.addGroup(
									FAQPanelLayout
											.createParallelGroup()
											.addComponent(
													getJlabelPic(),
													GroupLayout.Alignment.LEADING,
													0, 136, Short.MAX_VALUE)
											.addGroup(
													GroupLayout.Alignment.LEADING,
													FAQPanelLayout
															.createSequentialGroup()
															.addGap(
																	0,
																	27,
																	Short.MAX_VALUE)
															.addComponent(
																	getEmaillbl(),
																	GroupLayout.PREFERRED_SIZE,
																	GroupLayout.PREFERRED_SIZE,
																	GroupLayout.PREFERRED_SIZE)
															.addGap(72)
															.addComponent(
																	getOKbtn(),
																	GroupLayout.PREFERRED_SIZE,
																	GroupLayout.PREFERRED_SIZE,
																	GroupLayout.PREFERRED_SIZE)))
							.addContainerGap());
		}
		return FAQPanel;
	}

	private JButton getOKbtn() {
		if (OKbtn == null) {
			OKbtn = new JButton();
			OKbtn.setText("OK");
			OKbtn.setAction(getOKFAQ());
		}
		return OKbtn;
	}

	private AbstractAction getOKFAQ() {
		if (OKFAQ == null) {
			OKFAQ = new AbstractAction("OK", null) {
				public void actionPerformed(ActionEvent evt) {
					getFAQDlg().dispose();
				}
			};
		}
		return OKFAQ;
	}

	private JScrollPane getJScrollPane3() {
		if (jScrollPane3 == null) {
			jScrollPane3 = new JScrollPane();
			jScrollPane3.setPreferredSize(new java.awt.Dimension(465, 436));
			jScrollPane3.setViewportView(getFAQPanel());
		}
		return jScrollPane3;
	}

	private JLabel getFAQLabel() {
		if (FAQLabel == null) {
			FAQLabel = new JLabel();
			FAQLabel
					.setText("<html>\n<header>\n<h1> Frequently Answered Questions </h1>\n</header>\n</html>");
			FAQLabel.setHorizontalAlignment(SwingConstants.CENTER);
			FAQLabel.setHorizontalTextPosition(SwingConstants.CENTER);
		}
		return FAQLabel;
	}

	private JLabel getFaq1() {
		if (faq1 == null) {
			faq1 = new JLabel();
			faq1.setText("1. Can I sort by frequency? ");
			faq1.setFont(new java.awt.Font("Arial", 3, 12));
		}
		return faq1;
	}

	private JLabel getFaqa1() {
		if (faqa1 == null) {
			faqa1 = new JLabel();
			faqa1
					.setText("No. The current version is sorted by word alphabetically. ");
		}
		return faqa1;
	}

	private JLabel getFaqq2() {
		if (faqq2 == null) {
			faqq2 = new JLabel();
			faqq2.setText("2. What are unique words?");
			faqq2.setFont(new java.awt.Font("Arial", 3, 12));
		}
		return faqq2;
	}

	private JLabel getJLabel8() {
		if (jLabel8 == null) {
			jLabel8 = new JLabel();
			jLabel8
					.setText("<html> Unique words are words in text which all occur at most<br> once or more.</html> ");
		}
		return jLabel8;
	}

	private JLabel getJLabel9() {
		if (jLabel9 == null) {
			jLabel9 = new JLabel();
			jLabel9.setText("3. What is the limit for Unique words?");
			jLabel9.setFont(new java.awt.Font("Arial", 3, 12));
		}
		return jLabel9;
	}

	private JLabel getFaqa3() {
		if (faqa3 == null) {
			faqa3 = new JLabel();
			faqa3.setText("The limit for unique words is 50. ");
		}
		return faqa3;
	}

	private JLabel getJLabel10() {
		if (jLabel10 == null) {
			jLabel10 = new JLabel();
			jLabel10.setText("4. How much should I donate?\n ");
			jLabel10.setFont(new java.awt.Font("Arial", 3, 12));
		}
		return jLabel10;
	}

	private JLabel getJLabel11() {
		if (jLabel11 == null) {
			jLabel11 = new JLabel();
			jLabel11
					.setText("<html>Please donate what you are comfortable with as you would like to promote these kind of applications on our website. 4Circlesllc.com <br> Suggested US $10/= or any other amount.</html>\n  ");
		}
		return jLabel11;
	}

	private JLabel getJlabelPic() {
		if (jlabelPic == null) {
			jlabelPic = new JLabel();
			jlabelPic.setIcon(new ImageIcon(getClass().getClassLoader()
					.getResource("images/4circlesSmall.JPG")));
		}
		return jlabelPic;
	}

	private JLabel getEmaillbl() {
		if (emaillbl == null) {
			emaillbl = new JLabel();
			emaillbl.setText("Email: wordcount@4circlesLLC.com");
		}
		return emaillbl;
	}

	private JLabel getContactSnailMail() {
		if (contactSnailMail == null) {
			contactSnailMail = new JLabel();
			contactSnailMail
					.setText("<html><b>Mail checks to:</b><br> 4 Circles LLC <br>9956 W. Remington Pl, <br> Unit 10-A, #129<br> Littleton, CO 80128, USA</html>");
			contactSnailMail.setFont(new java.awt.Font("Arial", 0, 11));
			contactSnailMail.setHorizontalAlignment(SwingConstants.CENTER);
			contactSnailMail.setDoubleBuffered(true);
			contactSnailMail.setBorder(BorderFactory.createTitledBorder(""));
		}
		return contactSnailMail;
	}

	private JMenu getFileMenu() {
		if (fileMenu == null) {
			fileMenu = new JMenu();
			fileMenu.setText("File");
			fileMenu.add(getClearMenuItem());
			fileMenu.add(getJMenuItem3());
			}
		return fileMenu;
	}

	private AbstractAction getExitMenuAction() {
		if (ExitMenuAction == null) {
			ExitMenuAction = new AbstractAction("Exit", null) {
				public void actionPerformed(ActionEvent evt) {
					System.exit(0);
				}
			};
		}
		return ExitMenuAction;
	}

	private JMenuItem getJMenuItem3() {
		if (jMenuItem3 == null) {
			jMenuItem3 = new JMenuItem();
			jMenuItem3.setAction(getExitMenuAction());
		}
		return jMenuItem3;
	}
	
	private JMenu getEdit() {
		if(Edit == null) {
			Edit = new JMenu();
			Edit.setText("Edit");
			Edit.setBounds(-23, 21, 32, 21);
			Edit.add(getSelectMenuItem());
			Edit.add(getCopyMenuItem());
			Edit.add(getCutMenuItem());
			Edit.add(getPasteMenuItem());
		}
		return Edit;
	}
	
	private JMenuItem getCopyMenuItem() {
		
			CopyMenuItem = new JMenuItem(jTextArea1.getActionMap().get(DefaultEditorKit.copyAction));
			CopyMenuItem.setText("Copy.. Ctrl C");
			CopyMenuItem.addMenuKeyListener(new MenuKeyListener() {
				public void menuKeyReleased(MenuKeyEvent evt) {
					System.out.println("CopyMenuItem.menuKeyReleased, event="+evt);
					//TODO add your code for CopyMenuItem.menuKeyReleased
				}
				public void menuKeyPressed(MenuKeyEvent evt) {
					CopyMenuItemMenuKeyPressed(evt);
				}
				public void menuKeyTyped(MenuKeyEvent evt) {
					System.out.println("CopyMenuItem.menuKeyTyped, event="+evt);
					//TODO add your code for CopyMenuItem.menuKeyTyped
				}
			});
		
		return CopyMenuItem;
	}
	
	private JMenuItem getPasteMenuItem() {
		if(PasteMenuItem == null) {
			PasteMenuItem = new JMenuItem(jTextArea1.getActionMap().get(DefaultEditorKit.pasteAction));
			PasteMenuItem.setText("Paste.. Ctrl V");
		}
		return PasteMenuItem;
	}
	
	private void CopyMenuItemMenuKeyPressed(MenuKeyEvent evt) {
		logger.debug("CopyMenuItem.menuKeyPressed, event="+evt);
		
	    	
		//TODO add your code for CopyMenuItem.menuKeyPressed
	}
	
	private JMenuItem getCutMenuItem() {
		if(CutMenuItem == null) {
			CutMenuItem = new JMenuItem(jTextArea1.getActionMap().get(DefaultEditorKit.cutAction));
			CutMenuItem.setText("Cut... Ctrl X");
		}
		return CutMenuItem;
	}
	
	private JMenuItem getSelectMenuItem() {
		if(SelectMenuItem == null) {
			SelectMenuItem = new JMenuItem(jTextArea1.getActionMap().get(DefaultEditorKit.selectAllAction));
			SelectMenuItem.setText("Select All .. Ctrl A");
		}
		return SelectMenuItem;
	}
	
	private JMenuItem getClearMenuItem() {
		if(clearMenuItem == null) {
			clearMenuItem = new JMenuItem();
			clearMenuItem.setText("Clear");
			clearMenuItem.setToolTipText("Clears Text Area & Counts");
			clearMenuItem.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
					clearMenuItemActionPerformed(evt);
				}
			});
		}
		return clearMenuItem;
	}
	
	private void clearMenuItemActionPerformed(ActionEvent evt) {
		logger.debug("clearMenuItem.actionPerformed, event="+evt);
		//TODO add your code for clearMenuItem.actionPerformed
		jTextArea1.setText("");
		clearTable(jTable1);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private JLabel AboutLbl1;
	private JButton AboutOKbtn;
	private JPanel AboutPanel;
	private JDialog AboutDlg;
	private JLabel AboutThx;
	private AbstractAction faqAction;
	private JMenuItem CopyMenuItem;
	private JMenuItem clearMenuItem;
	private JMenuItem SelectMenuItem;
	private JMenuItem CutMenuItem;
	private JMenuItem PasteMenuItem;
	private JMenu Edit;
	private JMenuItem jMenuItem3;
	private AbstractAction ExitMenuAction;
	private JMenu fileMenu;
	private JLabel contactSnailMail;
	private JLabel emaillbl;
	private JLabel jlabelPic;
	private JLabel jLabel11;
	private JLabel jLabel10;
	private JLabel faqa3;
	private JLabel jLabel9;
	private JLabel jLabel8;
	private JLabel faqq2;
	private JLabel faqa1;
	private JLabel faq1;
	private JLabel FAQLabel;
	private JScrollPane jScrollPane3;
	private AbstractAction OKFAQ;
	private JButton OKbtn;
	private JPanel FAQPanel;
	private JDialog FAQDlg;
	private AbstractAction okAction;
	private JMenuItem jMenuItem2;
	private JMenuItem jMenuItem1;
	private AbstractAction aboutAction1;
	private JMenu jMenu1;
	private JLabel AboutLabel5;
	private JLabel AboutLabel4;
	private JPanel jPanel2;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private JMenuBar topMenuBar;
	private JLabel AboutLbl2;
	private JLabel jLabel7;
	private JCheckBox chkBoxCase;
	private javax.swing.JTable jTable1;
	private javax.swing.JTextArea jTextArea1;
	// End of variables declaration//GEN-END:variables

}
